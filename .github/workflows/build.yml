name: Build & Release

on:
  push:
    branches: [master]
    paths:
      - '.github/workflows/**'
      - 'package.json'
      - 'package-lock.json'
      - 'src/**'
    tags:
      - 'v*'
      - 'V*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    # ⚠️ Rien de fonctionnel ne change au build
    env:
      # Évite l’échec sur macOS si tu n’as pas de certifs
      CSC_IDENTITY_AUTO_DISCOVERY: false
      APPLE_ID: ""
      APPLE_APP_SPECIFIC_PASSWORD: ""
      # Évite un crash de signature côté Windows si pas de certifs
      WIN_CSC_LINK: ""
      WIN_CSC_KEY_PASSWORD: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Package app
        run: npm run dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: |
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.AppImage
            dist/**/*.blockmap
            dist/**/latest*.yml
          if-no-files-found: warn

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      # ➜ Calcule une version d’affichage sans le 'v'/'V'
      - name: Compute display version (strip leading v/V)
        id: version
        shell: bash
        run: |
          RAW="${GITHUB_REF_NAME}"
          RAW="${RAW#v}"
          RAW="${RAW#V}"
          echo "version=$RAW" >> "$GITHUB_OUTPUT"

      - name: List files to be released (debug)
        run: |
          echo "Files to upload:"
          ls -lRh artifacts || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          # ➜ Titre exactement "CobbleNuutt Launcher Vx.x.x"
          name: ${{ format('CobbleNuutt Launcher V{0}', steps.version.outputs.version) }}
          generate_release_notes: true
          # ➜ Ne PAS échouer si un motif ne matche rien
          fail_on_unmatched_files: false
          files: |
            artifacts/**/*-arm64.dmg
            artifacts/**/*-arm64.dmg.blockmap
            artifacts/**/*-x64.dmg
            artifacts/**/*-x64.dmg.blockmap
            artifacts/**/*.AppImage
            artifacts/**/*.exe
            artifacts/**/*.exe.blockmap
            artifacts/**/latest.yml
            artifacts/**/latest-mac.yml
            artifacts/**/latest-linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
